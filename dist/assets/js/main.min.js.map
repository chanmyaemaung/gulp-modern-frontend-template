{"version":3,"sources":["main.js"],"names":["_ref","document","getElementById","progress","prev","next","steps","querySelectorAll","currentActive","update","forEach","step","index","classList","toggle","actives","style","width","length","disabled","cursor","addEventListener","Math","min","max"],"mappings":"AAAA,aACA,IAAAA,KAA+B,CAC7BC,SAASC,eAAe,YACxBD,SAASC,eAAe,QACxBD,SAASC,eAAe,SAHnBC,SAAQH,KAAA,GAAEI,KAAIJ,KAAA,GAAEK,KAAIL,KAAA,GAOrBM,MAAQL,SAASM,iBAAiB,mBAEpCC,cAAgB,EAapB,SAASC,SAEPH,MAAMI,SAAQ,SAACC,EAAMC,GACnBD,EAAKE,UAAUC,OAAO,yBAA0BF,EAAQJ,cAC1D,IAEA,IAAMO,EAAUd,SAASM,iBAAiB,2BAE1CJ,SAASa,MAAMC,OACXF,EAAQG,OAAS,IAAMZ,MAAMY,OAAS,GAAM,IAAM,IAEtDd,KAAKe,SAA6B,IAAlBX,cAChBH,KAAKc,SAAWX,gBAAkBF,MAAMY,OACxCb,KAAKW,MAAMI,OAASf,KAAKc,SAAW,cAAgB,UAGpDf,KAAKY,MAAMI,OAAShB,KAAKe,SAAW,cAAgB,SACtD,CA3BAd,KAAKgB,iBAAiB,SAAS,WAC7Bb,cAAgBc,KAAKC,IAAIf,cAAgB,EAAGF,MAAMY,QAClDT,QACF,IAEAL,KAAKiB,iBAAiB,SAAS,WAC7Bb,cAAgBc,KAAKE,IAAIhB,cAAgB,EAAG,GAC5CC,QACF","file":"main.min.js","sourcesContent":["// Declare constants with destructuring assignment\r\nconst [progress, prev, next] = [\r\n  document.getElementById(\"progress\"),\r\n  document.getElementById(\"prev\"),\r\n  document.getElementById(\"next\"),\r\n];\r\n\r\n// Use querySelectorAll to select all elements with class \"progress__step\"\r\nconst steps = document.querySelectorAll(\".progress__step\");\r\n\r\nlet currentActive = 1;\r\n\r\n// Use arrow functions for event listeners\r\nnext.addEventListener(\"click\", () => {\r\n  currentActive = Math.min(currentActive + 1, steps.length);\r\n  update();\r\n});\r\n\r\nprev.addEventListener(\"click\", () => {\r\n  currentActive = Math.max(currentActive - 1, 1);\r\n  update();\r\n});\r\n\r\nfunction update() {\r\n  // Use forEach to loop through steps array\r\n  steps.forEach((step, index) => {\r\n    step.classList.toggle(\"progress__step--active\", index < currentActive);\r\n  });\r\n\r\n  const actives = document.querySelectorAll(\".progress__step--active\");\r\n\r\n  progress.style.width =\r\n    ((actives.length - 1) / (steps.length - 1)) * 100 + \"%\";\r\n\r\n  prev.disabled = currentActive === 1;\r\n  next.disabled = currentActive === steps.length;\r\n  next.style.cursor = next.disabled ? \"not-allowed\" : \"pointer\";\r\n\r\n  // Use CSS to style cursor\r\n  prev.style.cursor = prev.disabled ? \"not-allowed\" : \"pointer\";\r\n}"]}